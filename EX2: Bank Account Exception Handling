using System;
class NegativeAmountException : Exception
{
    public NegativeAmountException(string message) : base(message)
    {
    }
}

class InsufficientFundsException : Exception
{
    public InsufficientFundsException(string message) : base(message)
    {
    }
}

class Excercise2
{
    static void Main()
    {
        try
        {
            BankAccount account = new BankAccount();
            Console.Write("Nhap so tien can gui vao tai khoan: ");
            decimal depositAmount = decimal.Parse(Console.ReadLine());
            account.Deposit(depositAmount);

            Console.Write("Nhap so tien can rut vao tai khoan: ");
            decimal withdrawAmount = decimal.Parse(Console.ReadLine());
            account.Withdraw(withdrawAmount);

            Console.WriteLine($"So du tai khoan: {account.Balance}");
        }
        catch (NegativeAmountException ex)
        {
            Console.WriteLine($"Loi: {ex.Message}");
        }
        catch (InsufficientFundsException ex)
        {
            Console.WriteLine($"Loi: {ex.Message}");
        }
        catch (FormatException)
        {
            Console.WriteLine("Vui long nhap so hop le!");
        }
    }
}

class BankAccount
{
    private decimal balance;

    public decimal Balance => balance;

    public void Deposit(decimal amount)
    {
        if (amount < 0)
        {
            throw new NegativeAmountException("So tien gui khong duoc am.");
        }
        balance += amount;
    }

    public void Withdraw(decimal amount)
    {
        if (amount < 0)
        {
            throw new NegativeAmountException("So tien rut khong duoc am.");
        }
        if (balance - amount < 0)
        {
            throw new InsufficientFundsException("Khong du tien trong tai khoan.");
        }
        balance -= amount;
    }
}

